__NUXT_JSONP__("/blog", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T){return {data:[{blogList:[{id:9,status:p,sort:a,date_created:"2023-12-01T10:31:00.000Z",date_updated:"2023-12-01T13:33:02.606Z",slug:"unlocking-success-the-power-of-key-performance-indicators-kpis-for-platform-engineering-teams",title:F,description:"\u003Cp\u003EUnlock the power of Key Performance Indicators (KPIs) for platform engineering teams! Dive into the world of measurable metrics shaping efficient digital platforms. Learn how KPIs drive performance, enhance user experiences, and steer strategies for success in this comprehensive guide. From uptime and scalability to incident response and customer satisfaction, uncover the insights and formulas that empower platform engineering teams to excel. Explore actionable strategies, benefits, and the transformative impact of KPI-driven approaches in optimizing digital ecosystems.\u003C\u002Fp\u003E",seo_title:F,seo_description:"Unlock the power of Key Performance Indicators (KPIs) in platform engineering! Dive into the world of measurable metrics shaping efficient digital platforms. Learn how KPIs drive performance, enhance user experiences, and steer strategies for success in this comprehensive guide. From uptime and scalability to incident response and customer satisfaction, uncover the insights and formulas that empower platform engineering teams to excel. Explore actionable strategies, benefits, and the transformative impact of KPI-driven approaches in optimizing digital ecosystems.",content:"\u003Cp\u003E\u003Cspan class=\"heading-content\"\u003E\u003Cstrong\u003EIntroduction:\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EPlatform engineering forms the backbone of today's businesses, making digital services reliable and scalable.&nbsp;\u003C\u002Fp\u003E\n\u003Cp\u003ETo steer this ship well, having clear performance indicators is key.&nbsp;\u003C\u002Fp\u003E\n\u003Cp\u003EThink of Key Performance Indicators (KPIs) as your team's friendly guide, helping focus on what the business truly needs.\u003C\u002Fp\u003E\n\u003Cp\u003EThey're like signposts, showing how well your systems are doing and pointing out ways to make them even better.&nbsp;\u003C\u002Fp\u003E\n\u003Cp\u003EIn this blog, we'll explore how KPIs play a crucial role in optimizing your strategies for platform engineering teams.&nbsp;\u003C\u002Fp\u003E\n\u003Cp\u003EJoin us as we explore how KPIs wield their influence in crafting a more efficient and successful methodology for platform engineering teams.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan class=\"heading-content\"\u003E\u003Cstrong\u003EWhat Are KPIs?\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EKey Performance Indicators (KPIs) are measurable metrics that help organizations gauge their performance against specific goals and objectives.&nbsp;\u003C\u002Fp\u003E\n\u003Cp\u003EIn the context of platform engineering, KPIs can provide valuable insights into the health, efficiency, and effectiveness of your engineering efforts.&nbsp;\u003C\u002Fp\u003E\n\u003Cp\u003EBy tracking and analyzing KPIs, you can make data-driven decisions to improve your platform's performance and functionality.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan class=\"heading-content\"\u003E\u003Cstrong\u003EChoosing the Right KPIs:\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan class=\"heading-content\"\u003ESelecting the right KPIs is crucial for a successful strategy of platform engineering teams.&nbsp;\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EHere are some essential KPIs that can help you optimize your efforts:\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan class=\"heading-content\"\u003E\u003Cstrong\u003E1) Uptime and Availability:\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EImportance:\u003C\u002Fstrong\u003E The availability of the platform is crucial as downtime can lead to revenue loss and a poor user experience. High uptime ensures that the platform is accessible to users when they need it.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003ECalculating Uptime:\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode class=\"inline\" spellcheck=\"false\"\u003E24 hours\u002Fday x 365 days\u002Fyear = 8,760 hours\u002Fyear.\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode class=\"inline\" spellcheck=\"false\"\u003ENumber of hours your network is up and running per year &divide; 8,760 hours x 100 = Yearly uptime percentage.\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EUptime signals a system's binary state of operation, whereas Availability delves deeper, encompassing performance and functionality. It acknowledges that a system, while operational, may run below par, impacting user service.&nbsp;\u003C\u002Fp\u003E\n\u003Cp\u003EThus, evaluating both uptime and availability offers a comprehensive insight into a system's operational capacity and user satisfaction.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan class=\"heading-content\"\u003E\u003Cstrong\u003E2) Error Rate:\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EImportance:\u003C\u002Fstrong\u003E Monitoring error rates helps identify issues and bugs within the platform. A high error rate indicates potential problems that need to be addressed to maintain reliability.\u003C\u002Fp\u003E\n\u003Cp\u003EThe Error Rate is a crucial Key Performance Indicator (KPI) that measures the frequency of errors or mistakes made in a specific process or system. To calculate the Error Rate for a platform engineering team, you can use the following formula:\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode class=\"inline\" spellcheck=\"false\"\u003EError Rate = (Number of Errors\u002F Total Number of Actions)&nbsp;&times;100\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EWhere:\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\n\u003Cp\u003ENumber of Errors: This represents the total count of errors encountered within a given period.\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cp\u003ETotal Number of Actions: This refers to the total count of actions or transactions performed within the same period.\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003EThe result is typically multiplied by 100 to express the Error Rate as a percentage, providing a clearer representation of the error frequency in relation to the total actions taken.\u003C\u002Fp\u003E\n\u003Cp\u003EFor instance, let's say the platform engineering team performed 10,000 actions within a month and encountered 100 errors during that time. Using the formula:\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode class=\"inline\" spellcheck=\"false\"\u003EError Rate = (100\u002F10000) &times; 100\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EError Rate=1%\u003C\u002Fp\u003E\n\u003Cp\u003EThis means that the Error Rate for that period is 1%, indicating that 1% of the actions performed resulted in errors. Adjust the time frame and actions\u002Ferrors count according to the specific period you're evaluating to calculate the Error Rate accurately for your platform engineers.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EWhat are actions and errors?\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EActions:\u003C\u002Fstrong\u003E Any meaningful user interaction or system operation within the platform, such as clicking buttons, processing transactions, or executing commands.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EErrors:\u003C\u002Fstrong\u003E Unexpected or undesired outcomes resulting from actions, encompassing system malfunctions, failed transactions, error messages, or inaccurate data output.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EWhy is it important for the platform engineering team?\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EMeasuring the error rate involves tallying the count of errors against the total number of actions within a specified timeframe.&nbsp;\u003C\u002Fp\u003E\n\u003Cp\u003EThis clarity ensures a precise evaluation of the platform's performance, aiding engineers in identifying and addressing issues effectively.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan class=\"heading-content\"\u003E\u003Cstrong\u003E3) Scalability Metrics:\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EImportance:\u003C\u002Fstrong\u003E Tracking the platform's ability to scale horizontally or vertically is crucial as it ensures the system can handle increased load without performance degradation. Scalability is vital for growth and accommodating more users.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EThe Scalability Index formula is:&nbsp;\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode class=\"inline\" spellcheck=\"false\"\u003EScalability Index =(Performance of Larger System\u002FPerformance of Smaller System) &times;100%\u003C\u002Fcode\u003E&nbsp; &nbsp; &nbsp;\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EPerformance of Larger System:\u003C\u002Fstrong\u003E Refers to the system's performance when it's scaled up or expanded, handling higher loads or resources.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EPerformance of Smaller System:\u003C\u002Fstrong\u003E Denotes the system's performance in its initial or smaller state, typically handling lower loads or resources.\u003C\u002Fp\u003E\n\u003Cp\u003EEvaluating performance often encompasses factors like response time (in milliseconds), throughput (in transactions per second), resource utilization (in percentage), or any specific metric relevant to the platform's functionality.\u003C\u002Fp\u003E\n\u003Cp\u003EFor instance, measuring the system's response time under increasing loads, say from 100 to 1000 concurrent users, allows engineers to assess how quickly the system processes requests as user numbers rise.&nbsp;\u003C\u002Fp\u003E\n\u003Cp\u003EThese metrics aid in understanding performance changes as the system transitions from its smaller state to a larger, more heavily loaded environment.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003ESuggested Approach:\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EFor instance, in measuring the Scalability Index, consider using response time as a performance metric. Measure the response time of critical operations or user interactions under varying loads, comparing performance between the smaller and larger system configurations.\u003C\u002Fp\u003E\n\u003Cp\u003EScalability Index Formula using Response Time:\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode class=\"inline\" spellcheck=\"false\"\u003E= (Response Time of Larger System\u002FResponse Time of Smaller System) x100%&nbsp;\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EBy assessing how response times scale as the system expands, this approach offers insights into how well the system handles increased loads or resources.&nbsp;\u003C\u002Fp\u003E\n\u003Cp\u003EThese metrics aid in understanding performance changes as the system transitions from its smaller state to a larger, more heavily loaded environment.\u003C\u002Fp\u003E\n\u003Cp\u003EEngineers can adapt this method by replacing \"response time\" with other relevant performance metrics to comprehensively evaluate scalability based on the platform's unique requirements and functionalities.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan class=\"heading-content\"\u003E\u003Cstrong\u003E4) Throughput:\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EImportance: \u003C\u002Fstrong\u003EThroughput, quantifying successful requests or transaction volumes within a timeframe, is critical for evaluating system efficiency and capacity. It guides capacity planning, ensuring the platform can handle expected user loads, and showcasing its scalability and performance.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode class=\"inline\" spellcheck=\"false\"\u003EFormula: Throughput = Total processed requests or transactions\u002F\u003C\u002Fcode\u003E\u003Ccode class=\"inline\" spellcheck=\"false\"\u003ETime period\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan class=\"heading-content\"\u003E\u003Cstrong\u003E5) Resource Utilization:\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EImportance\u003C\u002Fstrong\u003E: Monitoring resource usage helps optimize infrastructure, ensuring efficient resource allocation, and cost-effectiveness, and preventing resource bottlenecks.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode class=\"inline\" spellcheck=\"false\"\u003EUtilization Rate = (Resource Used\u002FTotal Available Resource) x 100%\u003C\u002Fcode\u003E&nbsp; &nbsp;&nbsp;\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EExamples of Resources Used can be:\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003ECPU:\u003C\u002Fstrong\u003E This refers to the amount of processing power utilized by the system.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003ERAM (Memory):\u003C\u002Fstrong\u003E It indicates the extent of memory resources in use by the system.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EDisk Space:\u003C\u002Fstrong\u003E Represents the amount of storage space occupied by data, applications, or system files.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003ENetwork Bandwidth:\u003C\u002Fstrong\u003E Denotes the level of data transfer or network usage.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EExamples of Total Available Resources can be:\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003ECPU:\u003C\u002Fstrong\u003E The total processing capacity of the system's CPU.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003ERAM (Memory):\u003C\u002Fstrong\u003E The total amount of available memory in the system.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EDisk Space:\u003C\u002Fstrong\u003E Total storage capacity or free disk space.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003ENetwork Bandwidth:\u003C\u002Fstrong\u003E The maximum data transfer capacity or available network bandwidth.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EUtilization Rate Calculation:\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EUtilization Rate calculates the percentage of resources utilized concerning their total available capacity. It's computed for each resource by dividing the used amount by the total available amount and multiplying by 100.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EFor example, for CPU utilization rate:\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode class=\"inline\" spellcheck=\"false\"\u003ECPU Utilization Rate = (CPU Used\u002FTotal CPU Capacity) x 100&nbsp;\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cp\u003ESimilarly, this formula applies to other resources like RAM, disk space, or network bandwidth to determine their utilization rates.\u003C\u002Fp\u003E\n\u003Cp\u003EWhen assessing resource utilization across different components like CPU, memory (RAM), disk space, and network bandwidth, it's crucial to understand acceptable utilization rates.&nbsp;\u003C\u002Fp\u003E\n\u003Cp\u003EHere's guidance on evaluating utilization rates for various resources:\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EAcceptable Utilization Rates for Different Resources:\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Col\u003E\n\u003Cli\u003E\n\u003Cp\u003E\u003Cstrong\u003ECPU Utilization Rate:\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cp\u003E\u003Cstrong\u003EGuideline: \u003C\u002Fstrong\u003EGenerally, average CPU utilization rates around 50% are considered optimum. Beyond this, sustained high usage may indicate the need for additional processing power to maintain optimal performance.\u003C\u002Fp\u003E\n\u003Col start=\"2\"\u003E\n\u003Cli\u003E\n\u003Cp\u003E\u003Cstrong\u003ERAM (Memory) Utilization Rate:\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cp\u003E\u003Cstrong\u003EGuideline:\u003C\u002Fstrong\u003E Memory utilization rates up to 70% are often acceptable. Higher utilization might impact system responsiveness or lead to swapping, affecting performance.\u003C\u002Fp\u003E\n\u003Cp\u003EFor workloads that are not volatile in terms of memory use 70% - 80% memory utilization rates can be often acceptable. For volatile workloads maximum provisioning should be done and of course actions to reduce volatility should be taken by the team.\u003C\u002Fp\u003E\n\u003Col start=\"3\"\u003E\n\u003Cli\u003E\n\u003Cp\u003E\u003Cstrong\u003EDisk Space Utilization Rate:\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cp\u003E\u003Cstrong\u003EGuideline\u003C\u002Fstrong\u003E: Aim to maintain disk space utilization below 50%-80% to prevent performance degradation or potential data loss due to insufficient space. For this utmost care should be taken and when the disk space utilization reaches 70%- 80% new disk space should be created immediately.&nbsp;\u003C\u002Fp\u003E\n\u003Col start=\"4\"\u003E\n\u003Cli\u003E\n\u003Cp\u003E\u003Cstrong\u003ENetwork Bandwidth Utilization Rate:\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cp\u003E\u003Cstrong\u003EGuideline:\u003C\u002Fstrong\u003E Network utilization rates vary based on the network's capacity and usage patterns. Consistently full utilization of the network's bandwidth should be avoided to ensure adequate bandwidth for smooth data transfer and prevents congestion.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EImportance of Monitoring Utilization Rates:\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003ERegularly monitoring these utilization rates allows engineers to:\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\n\u003Cp\u003EIdentify potential bottlenecks or resource constraints.\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cp\u003EProactively allocate resources or scale infrastructure as needed.\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cp\u003EMaintain system performance within baselines.\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cp\u003EPrevent service disruptions due to resource exhaustion.\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003EHaving different resources with unique utilization rates can be overwhelming to calculate and consolidate. It can be equally difficult to see all resources from a single prism.&nbsp;\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003ESo, here are a few suggestions to overcome this:-\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EDashboard Display:\u003C\u002Fstrong\u003E Create a centralized view to show CPU, RAM, disk space, and network metrics together.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EResource Patterns Analysis: \u003C\u002Fstrong\u003EStudy usage trends to find connections between different resources.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EConsistent Metrics:\u003C\u002Fstrong\u003E Normalize metrics for easy comparison across resources.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EAlert Systems:\u003C\u002Fstrong\u003E Set up alerts for resource usage thresholds to take proactive measures.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EOptimization Strategies:\u003C\u002Fstrong\u003E Develop plans based on combined resource analysis for efficient system management.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EReporting Tools:\u003C\u002Fstrong\u003E Generate comprehensive reports merging diverse resource data for informed decision-making.\u003C\u002Fp\u003E\n\u003Cp\u003EThis approach offers a streamlined view of system health, reveals resource correlations, and enables proactive resource management for optimal system performance.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EAdjustments Based on Specific Needs:\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EResource utilization thresholds may vary based on the platform's unique requirements, application characteristics, and industry standards.&nbsp;\u003C\u002Fp\u003E\n\u003Cp\u003ETherefore, adjusting these thresholds to suit specific operational demands ensures an effective and comprehensive understanding of resource utilization.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan class=\"heading-content\"\u003E\u003Cstrong\u003E6) Incident Response and Resolution Time:\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EIncident Response Time:-&nbsp;\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EImportance:\u003C\u002Fstrong\u003E Incident Response Time measures the duration taken to acknowledge and start addressing an incident after it occurs. A shorter response time indicates a more proactive and efficient response, reducing the impact of incidents on system availability and user experience.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EFormula:\u003C\u002Fstrong\u003E&nbsp;\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode class=\"inline\" spellcheck=\"false\"\u003EIncident Response Time = Time of Incident Acknowledgement - Time of Incident Occurrence\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EIncident Resolution Time:-&nbsp;\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EImportance:\u003C\u002Fstrong\u003E Incident Resolution Time measures the duration taken to resolve an incident fully. A shorter resolution time indicates a faster restoration of service, minimizing downtime, and ensuring a quicker return to normal system functionality.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EFormula:\u003C\u002Fstrong\u003E&nbsp;\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode class=\"inline\" spellcheck=\"false\"\u003EIncident Resolution Time = Time of Incident Resolution - Time of Incident Occurrence\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan class=\"heading-content\"\u003E\u003Cstrong\u003E7) Security Metrics:\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EImportance:\u003C\u002Fstrong\u003E Security metrics track the system's resilience against cyber threats and compliance with standards. It helps engineers identify vulnerabilities and maintain data integrity and user trust.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EExamples of Security Metrics:\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003ENumber of Security Incidents:\u003C\u002Fstrong\u003E Quantifies the total count of security breaches, incidents, or unauthorized access attempts within a defined period. Each instance of unauthorized access or breach is documented, aiding in understanding the frequency and severity of security issues.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EFormula:\u003C\u002Fstrong\u003E Count the total incidents detected within a specific period.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EExample\u003C\u002Fstrong\u003E: In a month, the system encountered 15 unauthorized access attempts.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EVulnerability Rate:\u003C\u002Fstrong\u003E Measures the total count of identified vulnerabilities or weaknesses within the system's infrastructure, applications, or networks. It assesses the system's susceptibility to potential threats and highlights areas requiring immediate attention or patching.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EFormula:\u003C\u002Fstrong\u003E Divide the number of identified vulnerabilities by the total systems or applications assessed.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EExample:\u003C\u002Fstrong\u003E 20 vulnerabilities found in an assessment of 100 systems.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003ECompliance Adherence Rate:\u003C\u002Fstrong\u003E Evaluates the system's compliance with industry-specific or regulatory standards such as GDPR, HIPAA, ISO, etc. It quantifies the system's alignment with required security protocols, policies, and guidelines.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EFormula:\u003C\u002Fstrong\u003E Divide compliant systems by the total number of systems assessed, multiplied by 100 for a percentage.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EExample:\u003C\u002Fstrong\u003E 80 out of 100 systems meet GDPR standards.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EPatch Management Effectiveness:\u003C\u002Fstrong\u003E Assesses the efficiency and timeliness of applying security patches or updates to address known vulnerabilities. It tracks the system's vulnerability exposure duration and the speed of implementing necessary security fixes.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EFormula:\u003C\u002Fstrong\u003E Calculate the time taken to apply patches after their release.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EExample:\u003C\u002Fstrong\u003E On average, patches are applied within 3 days of release.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003ETime to Detect and Time to Respond:\u003C\u002Fstrong\u003E Measures the duration taken to detect security incidents or breaches and the subsequent response time to mitigate or resolve these issues. A shorter detection and response time indicates a more proactive and efficient security posture.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EFormula:\u003C\u002Fstrong\u003E Measure the time taken from incident detection to resolution.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EExample:\u003C\u002Fstrong\u003E Incidents are detected within 1 hour and resolved in 4 hours.\u003C\u002Fp\u003E\n\u003Cp\u003EThese metrics collectively provide a comprehensive overview of a system's security posture, aiding engineers in identifying potential weaknesses, implementing necessary safeguards, and ensuring ongoing compliance with security standards and regulations.&nbsp;\u003C\u002Fp\u003E\n\u003Cp\u003EAdjust and prioritize these metrics based on the system's specific security needs and potential threats it faces.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan class=\"heading-content\"\u003E\u003Cstrong\u003E8) Deployment Frequency and Lead Time:\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EImportance:\u003C\u002Fstrong\u003E These metrics indicate the team's agility and efficiency in delivering new features or updates. Faster deployment frequencies and shorter lead times contribute to faster innovation and adaptability.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EFormulas:\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\n\u003Cp\u003EDeployment Frequency = Number of Deployments \u002F Time Period\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cp\u003ELead Time = Time from Idea to Deployment\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E\u003Cspan class=\"heading-content\"\u003E\u003Cstrong\u003E9) Developer Satisfaction:\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EImportance:\u003C\u002Fstrong\u003E Gathering user feedback and measuring developer satisfaction can help gauge the platform's developer-friendliness and identify areas for improvement.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EFormulas:\u003C\u002Fstrong\u003E Net Promoter Score (NPS) = Percentage of Promoters - Percentage of Detractors\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan class=\"heading-content\"\u003E\u003Cstrong\u003E10) Capacity Planning and Forecasting:\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EImportance:\u003C\u002Fstrong\u003E Predicting future resource needs and capacity requirements is essential for cost-effectively scaling the platform. This can be a place where there are chances of over-provisioning which can result in a dent in our pockets for no reason.\u003C\u002Fp\u003E\n\u003Cp\u003E\"Current Usage\" and \"Forecasted Growth\" can encompass various resources and cannot typically be represented by a single number.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003ECapacity Needed:\u003C\u002Fstrong\u003E The anticipated resources required in the future to support the platform's demand.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003ECurrent Usage:\u003C\u002Fstrong\u003E Represents the present utilization of various resources like CPU, memory, storage, network bandwidth, etc.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EForecasted Growth:\u003C\u002Fstrong\u003E Refers to the expected percentage increase in demand or workload across these resources over a specific period.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EConsiderations for Calculation:\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EInstead of a single number for \"Current Usage,\" it involves assessing multiple resource parameters and their respective utilization levels.&nbsp;\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EFor instance:\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\n\u003Cp\u003ECPU usage percentage\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cp\u003EMemory utilization in GB\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cp\u003EStorage space used in TB\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cp\u003ENetwork bandwidth in Mbps\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003ESimilarly, \"Forecasted Growth\" estimates the expected percentage increase across these resources based on business projections, user demand trends, or application usage forecasts.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003ECapacity Needed Formula:\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode class=\"inline\" spellcheck=\"false\"\u003ECapacity Needed = (Current Usage\u002F Forecasted Growth) x 100\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EThis formula estimates the required resources for future scalability based on the present resource utilization and anticipated growth.&nbsp;\u003C\u002Fp\u003E\n\u003Cp\u003EHowever, actual resource planning involves analyzing various resource parameters individually and projecting their respective growth for accurate capacity planning.&nbsp;\u003C\u002Fp\u003E\n\u003Cp\u003EAdjust the parameters according to specific resource types and anticipated growth rates to derive more precise estimations.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan class=\"heading-content\"\u003E\u003Cstrong\u003EImplementing KPI&rsquo;s Strategy for Your Platform Engineering Team:\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EDefine Clear Objectives:\u003C\u002Fstrong\u003E Begin by setting clear and specific goals for your platform engineering team. What do you want to achieve? Your KPIs should align with these objectives.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003ECollect and Analyze Data:\u003C\u002Fstrong\u003E Implement tools and processes to collect relevant data for your chosen KPIs. Use data analytics and visualization tools to gain insights from the data.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003ERegular Monitoring:\u003C\u002Fstrong\u003E Establish a routine for monitoring KPIs. Regularly check and update your KPI data to ensure you have a real-time understanding of your platform's performance.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EBenchmarking: \u003C\u002Fstrong\u003ECompare your KPIs with industry standards and competitors to understand where you stand and identify areas for improvement.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EActionable Insights:\u003C\u002Fstrong\u003E Use the insights gained from KPI analysis to make informed decisions and optimize your platform engineering team. If you notice a KPI is consistently falling short of its target, take corrective actions.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EContinuous Improvement:\u003C\u002Fstrong\u003E Your platform engineering strategy should be an ongoing process. Continuously review and refine your KPIs as your platform evolves and new challenges emerge.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan class=\"heading-content\"\u003E\u003Cstrong\u003EBenefits of KPI-driven Platform Engineering\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EData-Driven Decision Making\u003C\u002Fstrong\u003E: KPIs provide objective data, enabling informed decisions rather than relying on assumptions or intuition.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EProactive Issue Identification:\u003C\u002Fstrong\u003E Monitoring KPIs can help in the early detection of potential issues or bottlenecks, allowing for timely interventions.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EPerformance Optimization: \u003C\u002Fstrong\u003ESince this is an emerging role\u003Cstrong\u003E,\u003C\u002Fstrong\u003E clear KPIs can help platform engineers direct their efforts towards areas that need improvement, optimizing the platform's overall performance.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EEnhanced User Experience:\u003C\u002Fstrong\u003E Prioritizing KPIs related to user satisfaction directly translates into a better user experience and retention.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan class=\"heading-content\"\u003E\u003Cstrong\u003EConclusion:\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EIn the realm of platform engineering, Key Performance Indicators (KPIs) are our guiding stars, steering us toward efficiency, reliability, and scalability.\u003C\u002Fp\u003E\n\u003Cp\u003EHarnessing KPI insights empowers teams to make informed decisions, drive continuous improvement, and align strategies with organizational goals.\u003C\u002Fp\u003E\n\u003Cp\u003EAs we navigate the complex terrains of technological innovation, the strategic utilization of KPIs by platform engineering teams remains not just a tool, but a guiding principle, ensuring that every step taken is purposeful, measured, and in pursuit of excellence.&nbsp;\u003C\u002Fp\u003E\n\u003Cp\u003EWith KPIs as our guiding light, the journey toward optimizing the platform engineering team becomes an ongoing commitment to elevate performance, enhance user experiences, and pave the way for a more agile and successful future.\u003C\u002Fp\u003E",tags:["Platform Engineering Team","Key Performance Indicators (KPI)","Data Driven Decisions","Performance Metrics"],time_to_read:"11 minutes",user_created:{id:z,first_name:G,last_name:H,email:I,password:c,location:a,title:a,description:a,tags:a,avatar:J,language:i,theme:d,tfa_secret:a,status:e,role:f,token:a,last_access:K,last_page:L,provider:g,external_identifier:a,auth_data:a,email_notifications:h},user_updated:{id:z,first_name:G,last_name:H,email:I,password:c,location:a,title:a,description:a,tags:a,avatar:J,language:i,theme:d,tfa_secret:a,status:e,role:f,token:a,last_access:K,last_page:L,provider:g,external_identifier:a,auth_data:a,email_notifications:h},image:{id:"8fa40f59-46e5-4162-970e-6826a97664be",storage:q,filename_disk:"8fa40f59-46e5-4162-970e-6826a97664be.jpg",filename_download:"5024147 (2).jpg",title:"5024147 (2)",type:"image\u002Fjpeg",folder:r,uploaded_by:z,uploaded_on:"2023-12-01T06:54:20.671Z",modified_by:a,modified_on:"2023-12-01T06:54:21.375Z",charset:a,filesize:"83471",width:t,height:t,duration:a,embed:a,description:a,location:a,tags:a,metadata:{}}},{id:6,status:p,sort:a,date_created:"2023-11-08T14:32:00.000Z",date_updated:"2023-11-09T08:23:16.148Z",slug:"s6-overlay-quickstart",title:A,description:"\u003Cp data-pm-slice=\"1 1 []\"\u003ES6-overlay is designed for docker containers. But, It is hard to understand from the \u003Cu\u003E\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fjust-containers\u002Fs6-overlay\u002Fblob\u002Fmaster\u002FREADME.md\" target=\"_self\"\u003EReadme\u003C\u002Fa\u003E\u003C\u002Fu\u003E of the \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fjust-containers\u002Fs6-overlay\" target=\"_self\"\u003Erepository\u003C\u002Fa\u003E. So, I thought that let&rsquo;s write a quick start guide for it.\u003C\u002Fp\u003E\n\u003Ch2\u003E&nbsp;\u003C\u002Fh2\u003E",seo_title:A,seo_description:A,content:"\u003Cp dir=\"ltr\"\u003E\u003Cstrong\u003EWhat is S6-Overlay?\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003ES6-overlay is a container-focused process manager that offers end-to-end management of the container's lifecycle, from initialization to graceful shutdown. Its innovative design and feature set make it a compelling alternative to other process managers, such as supervisord. But what sets it apart from the rest? Let's explore its key features.\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003E\u003Cstrong\u003EKey Features of S6-Overlay\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003E\u003Cstrong\u003EVersatile Process Management:\u003C\u002Fstrong\u003E S6-overlay efficiently handles both one-time tasks and long-running processes, making it versatile for containerized tasks.\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003E\u003Cstrong\u003EDependency Control:\u003C\u002Fstrong\u003E Establish dependencies between processes to ensure orderly execution in complex application stacks.\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003E\u003Cstrong\u003ESequence Management: \u003C\u002Fstrong\u003EControl the start and stop sequence of processes, streamlining container operations.\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003E\u003Cstrong\u003EEnvironment Variable Templating:\u003C\u002Fstrong\u003E Easily customize process behavior with environment variables, adapting to different environments.\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003E\u003Cstrong\u003EEasy Integration:\u003C\u002Fstrong\u003E Seamlessly integrate S6-overlay into Docker images with a straightforward installation process.\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003E\u003Cstrong\u003ELog Management:\u003C\u002Fstrong\u003E Built-in log rotation simplifies log file management within container environments.\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003E\u003Cstrong\u003EGraceful Shutdown:\u003C\u002Fstrong\u003E Ensure data integrity with graceful process shutdown and the ability to execute custom scripts before container shutdown.\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003E\u003Cstrong\u003EMulti-Arch Support:\u003C\u002Fstrong\u003E S6-overlay accommodates the diverse landscape of container platforms with support for multi-architecture container images.\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003E\u003Cstrong\u003EDirectory Structure of S6-Overlay\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003ES6-overlay's directory structure sets it apart from other process managers, providing flexibility for process management in container environments. The base directory, \u002Fetc\u002Fs6-overlay\u002Fs6-rc, serves as the starting point. To manage processes effectively, create a directory for each process you wish to run. Within these directories, several key files play essential roles:\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003E\u003Cstrong\u003EType File:\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003EDefine the nature of your process by writing either \"oneshot\" or \"longrun.\" Use \"oneshot\" for tasks that run as initializations before primary processes. For continuous daemon processes supervised by S6, choose \"longrun.\"\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003E\u003Cstrong\u003EUp File:\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003EIn this file, specify the file path of your script. This path guides S6 to run the script. If left blank, S6 will consider the \"run\" file as your script.\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003E\u003Cstrong\u003ERun File:\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003EHere, you write the script or process that your container executes. If necessary, you can utilize environment variables and the \u003Ca href=\"https:\u002F\u002Fskarnet.org\u002Fsoftware\u002Fexecline\u002Fexeclineb.html\"\u003Eexeclineb\u003C\u002Fa\u003E command for added flexibility.\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003E\u003Cstrong\u003EDependencies Directory:\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003EThe dependencies.d directory plays a crucial role when your process relies on another. To establish dependencies, create empty files named after the processes your task depends on. Multiple files can be created when a process depends on more than one other process.\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003EThis directory structure simplifies the organization and execution of processes within your containerized environment, enhancing control and flexibility.\u003C\u002Fp\u003E\n\u003Cp\u003EFinally, it will look like below\u003C\u002Fp\u003E\n\u003Cdiv class=\"code-block with-line-numbers\" data-language=\"javascript\"\u003E\n\u003Cpre\u003E\u003Ccode spellcheck=\"false\"\u003Es6-overlay\n└── s6-rc.d\n    ├── init-nginx\n    │&nbsp;&nbsp; ├── dependencies.d\n    │&nbsp;&nbsp; │&nbsp;&nbsp; └── base\n    │&nbsp;&nbsp; ├── run\n    │&nbsp;&nbsp; ├── type\n    │&nbsp;&nbsp; └── up\n    ├── init-php82-fpm\n    │&nbsp;&nbsp; ├── dependencies.d\n    │&nbsp;&nbsp; │&nbsp;&nbsp; └── init-nginx\n    │&nbsp;&nbsp; ├── run\n    │&nbsp;&nbsp; ├── type\n    │&nbsp;&nbsp; └── up\n    ├── init-usermod\n    │&nbsp;&nbsp; ├── dependencies.d\n    │&nbsp;&nbsp; │&nbsp;&nbsp; └── init-nginx\n    │&nbsp;&nbsp; ├── run\n    │&nbsp;&nbsp; ├── type\n    │&nbsp;&nbsp; └── up\n    ├── svc-nginx\n    │&nbsp;&nbsp; ├── dependencies.d\n    │&nbsp;&nbsp; │&nbsp;&nbsp; ├── init-nginx\n    │&nbsp;&nbsp; │&nbsp;&nbsp; └── svc-php82-fpm\n    │&nbsp;&nbsp; ├── run\n    │&nbsp;&nbsp; └── type\n    ├── svc-php82-fpm\n    │&nbsp;&nbsp; ├── dependencies.d\n    │&nbsp;&nbsp; ├── run\n    │&nbsp;&nbsp; └── type\n    ├── svc-stdout\n    │&nbsp;&nbsp; ├── dependencies.d\n    │&nbsp;&nbsp; │&nbsp;&nbsp; ├── svc-nginx\n    │&nbsp;&nbsp; │&nbsp;&nbsp; └── svc-php82-fpm\n    │&nbsp;&nbsp; ├── run\n    │&nbsp;&nbsp; └── type\n    └── user\n        └── contents.d\n            ├── init-nginx\n            ├── init-php82-fpm\n            ├── init-usermod\n            ├── svc-nginx\n            ├── svc-php82-fpm\n            └── svc-stdout\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003C\u002Fdiv\u003E\n\u003Cp dir=\"ltr\"\u003E\u003Cstrong\u003EInstalling S6\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003ES6-overlay is distributed in several tar files, each with a \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fjust-containers\u002Fs6-overlay?tab=readme-ov-file#installation\" target=\"_self\"\u003Edetailed description\u003C\u002Fa\u003E. The choice of which tar file to install depends on your specific requirements:\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003ETo utilize scripts with environment variables, you should install the symlinks tar files.\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003EIf you are running daemons that cannot log to stderr to take advantage of the s6 logging infrastructure, and rely on the old syslog() mechanism, consider installing the syslog-overlay-noarch tar file.\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003EHere is a sample Dockerfile code snippet to install S6-overlay in your Docker image,\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong id=\"docs-internal-guid-304629f9-7fff-4b58-9703-30876d7ce914\"\u003E\u003C\u002Fstrong\u003EYou can find the full image \u003Ca href=\"https:\u002F\u002Fgithub.com\u002FImprowised\u002Fdocker-php-base\u002Ftree\u002Fs6-php82\" target=\"_self\"\u003Ehere\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\u003Cdiv class=\"code-block with-line-numbers\" data-language=\"bash\"\u003E\n\u003Cpre\u003E\u003Ccode spellcheck=\"false\"\u003EFROM alpine:3.18\n\nARG S6_OVERLAY_VERSION=\"3.1.5.0\"\nARG S6_OVERLAY_ARCH=\"x86_64\"\n\n# add s6 overlay\nADD https:\u002F\u002Fgithub.com\u002Fjust-containers\u002Fs6-overlay\u002Freleases\u002Fdownload\u002Fv${S6_OVERLAY_VERSION}\u002Fs6-overlay-noarch.tar.xz \u002Ftmp\nRUN tar -C \u002F -Jxpf \u002Ftmp\u002Fs6-overlay-noarch.tar.xz\nADD https:\u002F\u002Fgithub.com\u002Fjust-containers\u002Fs6-overlay\u002Freleases\u002Fdownload\u002Fv${S6_OVERLAY_VERSION}\u002Fs6-overlay-${S6_OVERLAY_ARCH}.tar.xz \u002Ftmp\nRUN tar -C \u002F -Jxpf \u002Ftmp\u002Fs6-overlay-${S6_OVERLAY_ARCH}.tar.xz\n\n# add s6 optional symlinks\nADD https:\u002F\u002Fgithub.com\u002Fjust-containers\u002Fs6-overlay\u002Freleases\u002Fdownload\u002Fv${S6_OVERLAY_VERSION}\u002Fs6-overlay-symlinks-noarch.tar.xz \u002Ftmp\nRUN tar -C \u002F -Jxpf \u002Ftmp\u002Fs6-overlay-symlinks-noarch.tar.xz\nADD https:\u002F\u002Fgithub.com\u002Fjust-containers\u002Fs6-overlay\u002Freleases\u002Fdownload\u002Fv${S6_OVERLAY_VERSION}\u002Fs6-overlay-symlinks-arch.tar.xz \u002Ftmp\nRUN tar -C \u002F -Jxpf \u002Ftmp\u002Fs6-overlay-symlinks-arch.tar.xz\nADD https:\u002F\u002Fgithub.com\u002Fjust-containers\u002Fs6-overlay\u002Freleases\u002Fdownload\u002Fv${S6_OVERLAY_VERSION}\u002Fsyslogd-overlay-noarch.tar.xz \u002Ftmp\nRUN tar -C \u002F -Jxpf \u002Ftmp\u002Fsyslogd-overlay-noarch.tar.xz\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003C\u002Fdiv\u003E\n\u003Cp dir=\"ltr\"\u003EIn a production environment, when running PHP applications, it becomes essential to employ PHP-FPM. This is due to PHP's single-threaded nature, which can limit its ability to efficiently handle heavy traffic while conserving memory and CPU resources. In such scenarios, S6-overlay proves to be an ideal choice for managing these applications. In this example, we will demonstrate how to set up PHP-FPM alongside Nginx using S6-overlay.&nbsp;\u003C\u002Fp\u003E\n\u003Ch3 dir=\"ltr\"\u003E\u003Cstrong\u003EInstalling PHP and Nginx\u003C\u002Fstrong\u003E\u003C\u002Fh3\u003E\n\u003Cp dir=\"ltr\"\u003ETo install PHP and Nginx, you can use a package manager. In our case, we are utilizing an Alpine base image, making it convenient to use the apk package manager.\u003C\u002Fp\u003E\n\u003Cdiv class=\"code-block with-line-numbers\" data-language=\"bash\"\u003E\n\u003Cpre\u003E\u003Ccode spellcheck=\"false\"\u003E# Install OS Dependencies\nRUN set -ex \\\n  &amp;&amp; apk add --no-cache --virtual .build-deps \\\n    autoconf automake build-base python3 gmp-dev \\\n    curl \\\n    tar \\\n  &amp;&amp; apk add --no-cache --virtual .run-deps \\\n    nodejs npm \\\n    # PHP and extensions\n    php82 php82-bcmath php82-ctype php82-curl php82-dom php82-exif php82-fileinfo \\\n    php82-fpm php82-gd php82-gmp php82-iconv php82-intl php82-mbstring \\\n    php82-mysqlnd php82-mysqli php82-opcache php82-openssl php82-pcntl php82-pecl-apcu php82-pdo php82-pdo_mysql \\\n    php82-phar php82-posix php82-session php82-simplexml php82-sockets php82-sqlite3 php82-tidy \\\n    php82-tokenizer php82-xml php82-xmlreader php82-xmlwriter php82-zip php82-pecl-xdebug php82-pecl-redis php82-soap php82-sodium php82-pdo_sqlite php82-pdo_pgsql php82-pgsql \\\n    # Other dependencies\n    mariadb-client sudo shadow \\\n    # Miscellaneous packages\n    bash ca-certificates dialog git libjpeg libpng-dev openssh-client vim wget shadow \\\n    # Nginx\n    nginx \\\n    # Create directories\n  &amp;&amp; mkdir -p \u002Fetc\u002Fnginx \\\n    &amp;&amp; mkdir -p \u002Frun\u002Fnginx \\\n    &amp;&amp; mkdir -p \u002Fetc\u002Fnginx\u002Fsites-available \\\n    &amp;&amp; mkdir -p \u002Fetc\u002Fnginx\u002Fsites-enabled \\\n    &amp;&amp; rm -Rf \u002Fvar\u002Fwww\u002F* \\\n    &amp;&amp; rm -Rf \u002Fetc\u002Fnginx\u002Fnginx.conf \\\n  # Composer\n  &amp;&amp; wget https:\u002F\u002Fcomposer.github.io\u002Finstaller.sig -O - -q | tr -d '\\n' &gt; installer.sig \\\n    &amp;&amp; php82 -r \"copy('https:\u002F\u002Fgetcomposer.org\u002Finstaller', 'composer-setup.php');\" \\\n    &amp;&amp; php82 -r \"if (hash_file('SHA384', 'composer-setup.php') === file_get_contents('installer.sig')) { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\" \\\n    &amp;&amp; php82 composer-setup.php --install-dir=\u002Fusr\u002Fbin --filename=composer \\\n    &amp;&amp; php82 -r \"unlink('composer-setup.php'); unlink('installer.sig');\" \\\n  # Cleanup\n  &amp;&amp; apk del .build-deps\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003C\u002Fdiv\u003E\n\u003Cp dir=\"ltr\"\u003EHere we also installed Nodejs and npm as we are using this image for the Laravel app in which frontend files will be built using vite.\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003ENow we need PHP-FPM and Nginx config.&nbsp; Generally, we kept in base image repo in the following directory structure\u003C\u002Fp\u003E\n\u003Cdiv class=\"code-block with-line-numbers\" data-language=\"javascript\"\u003E\n\u003Cpre\u003E\u003Ccode spellcheck=\"false\"\u003E└── rootfs\n    └── etc\n        ├── nginx\n        │&nbsp;&nbsp; ├── nginx.conf\n        │&nbsp;&nbsp; ├── sites-available\n        │&nbsp;&nbsp; │&nbsp;&nbsp; └── default.conf\n        │&nbsp;&nbsp; └── sites-enabled\n        ├── php82\n        │&nbsp;&nbsp; ├── conf.d\n        │&nbsp;&nbsp; ├── php-fpm.conf\n        │&nbsp;&nbsp; ├── php-fpm.d\n        │&nbsp;&nbsp; │&nbsp;&nbsp; └── www.conf\n        │&nbsp;&nbsp; └── php.ini\n        ├── s6-overlay\n        │&nbsp;&nbsp; └── s6-rc.d\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003C\u002Fdiv\u003E\n\u003Cp\u003ESo we added that using the below line in the Dockerfile\u003C\u002Fp\u003E\n\u003Cdiv class=\"code-block with-line-numbers\" data-language=\"javascript\"\u003E\n\u003Cpre\u003E\u003Ccode spellcheck=\"false\"\u003EADD rootfs \u002F\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003C\u002Fdiv\u003E\n\u003Ch3 dir=\"ltr\"\u003ESetting Users &amp; Permissions in Your Image\u003C\u002Fh3\u003E\n\u003Cp dir=\"ltr\"\u003EBy default, Docker runs containers with root privileges. While this is suitable for local development, where developers may need to install new packages or edit configs, it is not recommended for production environments. Allowing anyone with access to the container to add packages or change permissions can pose security risks.\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003ETo address this, it's advisable to run your processes as non-root users. To achieve this, we utilize the following script to set the User ID (UID) and Group ID (GID) of the \"nginx\" user and group. This script is included in the S6-overlay, ensuring that it runs as a one-shot task before the start of PHP-FPM and Nginx.\u003C\u002Fp\u003E\n\u003Cdiv class=\"code-block with-line-numbers\" data-language=\"javascript\"\u003E\n\u003Cpre\u003E\u003Ccode spellcheck=\"false\"\u003E#!\u002Fusr\u002Fbin\u002Fwith-contenv bash\n# shellcheck shell=bash\n\nUID=${UID:-911}\nGID=${GID:-911}\n\nusermod -u \"$UID\" nginx &amp;&amp; groupmod -g \"$GID\" nginx\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003C\u002Fdiv\u003E\n\u003Cp\u003EIn that script, you can use the environment variables that you passed to your container.&nbsp;i.e\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode class=\"inline\" spellcheck=\"false\"\u003Edocker run --name s6-app -e UID -e GID -p 8888:80 -v .:\u002Fvar\u002Fwww\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Ch3 dir=\"ltr\"\u003EProcess Sequences\u003C\u002Fh3\u003E\n\u003Cp dir=\"ltr\"\u003EWhen you are running multiple processes, it becomes essential to ensure they run in a specific sequence. S6-overlay simplifies the process of defining and controlling the sequence in which these processes operate.\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003EFor instance, if your Nginx process depends on an initialization process for Nginx, it's straightforward to establish the sequence, ensuring that the necessary processes start in the correct order.&nbsp;\u003C\u002Fp\u003E\n\u003Cdiv class=\"code-block with-line-numbers\" data-language=\"javascript\"\u003E\n\u003Cpre\u003E\u003Ccode spellcheck=\"false\"\u003Ecd svc-nginx\nmkdir dependencies.d\ntouch init-nginx svc-php82-fpm\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003C\u002Fdiv\u003E\n\u003Cp\u003ENow, \u003Ccode class=\"inline\" spellcheck=\"false\"\u003Esvc-nginx\u003C\u002Fcode\u003E will start only after \u003Ccode class=\"inline\" spellcheck=\"false\"\u003Einit-nginx\u003C\u002Fcode\u003E will be completed(as it is oneshot) and \u003Ccode class=\"inline\" spellcheck=\"false\"\u003Esvc-php82-fpm\u003C\u002Fcode\u003E will be in a running state.\u003C\u002Fp\u003E\n\u003Ch3\u003E\u003Cspan class=\"heading-content\"\u003EGraceful Shutdown\u003C\u002Fspan\u003E\u003C\u002Fh3\u003E\n\u003Cp dir=\"ltr\"\u003EA graceful shutdown is crucial for preserving the proper state of data and responses when a container exits. S6-overlay simplifies this process by supporting the use of variables like S6_SERVICES_GRACETIME and S6_KILL_GRACETIME to set a graceful exit time frame. Additionally, S6-overlay allows you to customize the exit code that the container returns upon termination. You can achieve this by creating a \"finish\" script in your process directory.\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003EFor instance, in cases where you are running a non-critical process, you can use the finish script to specify a return status of 0. The inclusion of a finish script is optional but valuable when you need to modify the exit code or execute specific cleanup tasks during the container's shutdown.\u003C\u002Fp\u003E\n\u003Cdiv class=\"code-block with-line-numbers\" data-language=\"bash\"\u003E\n\u003Cpre\u003E\u003Ccode spellcheck=\"false\"\u003E#!\u002Fbin\u002Fsh\n\necho \"0\" &gt; \u002Frun\u002Fs6-linux-init-container-results\u002Fexitcode\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003C\u002Fdiv\u003E\n\u003Ch3\u003E\u003Cspan class=\"heading-content\"\u003EExtending Image\u003C\u002Fspan\u003E\u003C\u002Fh3\u003E\n\u003Cp dir=\"ltr\"\u003ES6-overlay's directory-based structure offers a straightforward method for extending this image from another base image. You can effortlessly create multiple images by adding additional processes without overwriting existing configurations in S6-overlay.\u003C\u002Fp\u003E\n\u003Cdiv class=\"code-block with-line-numbers\" data-language=\"javascript\"\u003E\n\u003Cpre\u003E\u003Ccode spellcheck=\"false\"\u003ECOPY svc-crond \u002Fetc\u002Fs6-overlay\u002Fs6-rc.d\u002Fsvc-crond\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003C\u002Fdiv\u003E\n\u003Ch3\u003E\u003Cspan class=\"heading-content\"\u003ESummary\u003C\u002Fspan\u003E\u003C\u002Fh3\u003E\n\u003Cp dir=\"ltr\"\u003EFor many years, we relied on Supervisor in our production environments. However, it became evident that the Supervisor could not address all the challenges we encountered.\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003EThis is where S6-overlay emerged as a modern alternative, offering a comprehensive solution to our process management needs.\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003ES6-overlay's versatility and ease of use make it a perfect choice, particularly for container images that require the execution of multiple processes.&nbsp;\u003C\u002Fp\u003E",tags:a,time_to_read:"4 minutes",user_created:{id:"c7ce7ff3-6577-4e14-9e95-71b2dd8d67c4",first_name:"Munir",last_name:"Khakhi",email:"munir@improwised.com",password:c,location:a,title:a,description:a,tags:a,avatar:"9f47a2fb-c13e-4cf3-99fa-7117ef11e769",language:a,theme:d,tfa_secret:a,status:e,role:f,token:a,last_access:"2023-11-08T11:54:20.706Z",last_page:"\u002Fcontent\u002Fpe_blog\u002F6",provider:g,external_identifier:a,auth_data:a,email_notifications:h},user_updated:{id:b,first_name:j,last_name:k,email:l,password:c,location:a,title:a,description:a,tags:a,avatar:m,language:i,theme:d,tfa_secret:a,status:e,role:f,token:a,last_access:n,last_page:o,provider:g,external_identifier:a,auth_data:a,email_notifications:h},image:{id:"8c141490-592d-44e9-af15-f62f90bf32d1",storage:q,filename_disk:"8c141490-592d-44e9-af15-f62f90bf32d1.png",filename_download:"S6 Image-modified-min.png",title:"S6 Image Modified Min",type:s,folder:r,uploaded_by:b,uploaded_on:"2023-11-09T08:23:10.354Z",modified_by:a,modified_on:"2023-11-09T08:23:11.152Z",charset:a,filesize:"320237",width:t,height:t,duration:a,embed:a,description:a,location:a,tags:a,metadata:{}}},{id:5,status:p,sort:a,date_created:"2023-09-20T11:19:44.294Z",date_updated:"2023-09-20T14:43:48.030Z",slug:"role-of-golden-path-in-internal-developer-platforms",title:B,description:"\u003Cp dir=\"ltr\"\u003EPlatform engineering is an evolving discipline that underscores the importance of providing developers with consistent, scalable, and effective tools to foster innovation. In the context of DevOps, platform engineering bridges the gap between software development and IT operations, offering seamless integration and streamlined processes. A pivotal instrument in this nexus is the Internal Developer Platform (IDP).\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003EInternal Developer Platforms are platforms designed within organizations to automate the environments, tools, and workflows that their developers use. It's like a &ldquo;PaaS&rdquo; but built and tailored for a specific company&rsquo;s needs. Within these platforms, a pivotal component that promises standardization and efficiency is the \"Golden Path\".\u003C\u002Fp\u003E",seo_title:B,seo_description:B,content:"\u003Cp dir=\"ltr\"\u003EPlatform engineering is an evolving discipline that underscores the importance of providing developers with consistent, scalable, and effective tools to foster innovation. In the context of DevOps, platform engineering bridges the gap between software development and IT operations, offering seamless integration and streamlined processes. A pivotal instrument in this nexus is the Internal Developer Platform (IDP).\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003EInternal Developer Platforms are platforms designed within organizations to automate the environments, tools, and workflows that their developers use. It's like a &ldquo;PaaS&rdquo; but built and tailored for a specific company&rsquo;s needs. Within these platforms, a pivotal component that promises standardization and efficiency is the \u003Cstrong\u003E\"Golden Path\"\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003E\u003Cstrong\u003EWhat are Golden Paths?\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EGolden paths are predefined, recommended workflows and environments for developers. Instead of letting developers figure out every process from scratch, golden paths provide a blueprint for how certain tasks should ideally be executed.\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003EThese paths ensure that there's consistency in how different developers approach similar problems, thus enhancing efficiency and overall code quality. Furthermore, for startups and enterprises, golden paths are instrumental in streamlining onboarding, making collaboration more intuitive, and promoting knowledge sharing across teams.\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003E\u003Cstrong\u003EBenefits of Golden Path in Internal Developer Platforms\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli dir=\"ltr\"\u003EEnhanced Productivity and Efficiency: Standardized workflows reduce decision fatigue and ensure that developers are working optimally.\u003C\u002Fli\u003E\n\u003Cli dir=\"ltr\"\u003EReduced Errors and Rework: Consistent practices mean fewer mistakes and less rework, saving both time and resources.\u003C\u002Fli\u003E\n\u003Cli dir=\"ltr\"\u003EAccelerated Development Timelines: With clear guidelines in place, the development process can move faster, leading to quicker time-to-market.\u003C\u002Fli\u003E\n\u003Cli dir=\"ltr\"\u003EImproved Collaboration: With everyone on the same page, collaboration becomes seamless and more effective.\u003C\u002Fli\u003E\n\u003Cli dir=\"ltr\"\u003EEasier Onboarding: New team members can quickly understand and integrate into existing workflows.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp dir=\"ltr\"\u003E\u003Cstrong\u003EDesigning Effective Golden Path\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003EThe creation of an effective golden path involves:\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli dir=\"ltr\"\u003EUnderstanding Developer Personas: Different developers have different needs. Identify these personas to tailor golden path effectively.\u003C\u002Fli\u003E\n\u003Cli dir=\"ltr\"\u003EUser Research: Gather feedback from developers to understand pain points and areas of improvement.\u003C\u002Fli\u003E\n\u003Cli dir=\"ltr\"\u003EChoosing Tools and Technologies: The tools selected should align with the organization's objectives and the developers' preferences.\u003C\u002Fli\u003E\n\u003Cli dir=\"ltr\"\u003EClear Documentation: Each golden path should be documented meticulously, ensuring clarity.\u003C\u002Fli\u003E\n\u003Cli dir=\"ltr\"\u003ERegular Updates: The tech landscape is always evolving. Golden path should be reviewed and updated periodically.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp dir=\"ltr\"\u003E\u003Cstrong\u003EImplementing Golden Path in Internal Developer Platforms\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003EIntegration is key. This involves:\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli dir=\"ltr\"\u003EEmbedding into the IDP: Golden path should be a part of the Internal Developer Platform, easily accessible and visible.\u003C\u002Fli\u003E\n\u003Cli dir=\"ltr\"\u003EVisibility and Tracking: Monitor how often and effectively these paths are being used.\u003C\u002Fli\u003E\n\u003Cli dir=\"ltr\"\u003EPromotion: Conduct training sessions, workshops, and other educational initiatives to encourage adoption.\u003C\u002Fli\u003E\n\u003Cli dir=\"ltr\"\u003EContinuous Improvement: Use feedback and data analysis to continuously refine and improve golden path.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E\u003Cstrong\u003EChallenges and Considerations\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EEvery innovation comes with challenges:\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli dir=\"ltr\"\u003EResistance to Change: Some developers may prefer their established workflows.\u003C\u002Fli\u003E\n\u003Cli dir=\"ltr\"\u003EFlexibility vs. Standardization: Striking a balance is crucial.\u003C\u002Fli\u003E\n\u003Cli dir=\"ltr\"\u003EEvolving Tech Landscape: Ensuring that golden path remain relevant amidst rapidly changing technologies.\u003C\u002Fli\u003E\n\u003Cli dir=\"ltr\"\u003EMonitoring and Maintenance: Continuous efforts are needed to ensure golden path retain their effectiveness over time.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp dir=\"ltr\"\u003EGolden path, when well-implemented within Internal Developer Platforms, can revolutionize the way startups and enterprises function. They promise consistency, efficiency, and a unified vision. However, the key lies in continuous improvement and adaptation, ensuring that these paths evolve as the organization grows.\u003C\u002Fp\u003E\n\u003Cp\u003E&nbsp;\u003C\u002Fp\u003E",tags:[M,u,v,"golden path",N],time_to_read:O,user_created:{id:b,first_name:j,last_name:k,email:l,password:c,location:a,title:a,description:a,tags:a,avatar:m,language:i,theme:d,tfa_secret:a,status:e,role:f,token:a,last_access:n,last_page:o,provider:g,external_identifier:a,auth_data:a,email_notifications:h},user_updated:{id:b,first_name:j,last_name:k,email:l,password:c,location:a,title:a,description:a,tags:a,avatar:m,language:i,theme:d,tfa_secret:a,status:e,role:f,token:a,last_access:n,last_page:o,provider:g,external_identifier:a,auth_data:a,email_notifications:h},image:{id:"cc96e8f3-b848-4b92-a7e2-2739ce006789",storage:q,filename_disk:"cc96e8f3-b848-4b92-a7e2-2739ce006789.png",filename_download:"5454613-ai.png",title:"5454613 Ai",type:s,folder:r,uploaded_by:b,uploaded_on:"2023-09-20T13:20:13.802Z",modified_by:a,modified_on:"2023-09-20T13:20:14.547Z",charset:a,filesize:"430252",width:P,height:P,duration:a,embed:a,description:a,location:a,tags:a,metadata:{}}},{id:4,status:p,sort:a,date_created:"2023-09-06T13:57:28.025Z",date_updated:"2023-09-20T13:42:03.711Z",slug:"platform-engineering-in-a-multi-cloud-world",title:C,description:"\u003Cp dir=\"ltr\"\u003EIn today's fast-paced tech world, using a multi-cloud strategy isn't just a trend; it's essential. Both SaaS startups and enterprises are finding that relying on just one cloud provider limits their potential. With every cloud provider offering specialized services, a multi-cloud approach provides the flexibility to harness the best of each. This not only optimizes operational efficiency but also broadens the horizon for innovation. Let's journey into this multi-cloud domain to understand its intricacies and the vast opportunities it presents.\u003C\u002Fp\u003E",seo_title:C,seo_description:C,content:"\u003Ch3 dir=\"ltr\"\u003E\u003Cstrong\u003E1. Inception&nbsp;\u003C\u002Fstrong\u003E\u003C\u002Fh3\u003E\n\u003Cp dir=\"ltr\"\u003EThe digital age presents us with an abundance of cloud options. While initially companies aligned with single cloud providers, the landscape has shifted. Now, with providers like AWS, GCP, and Azure offering specialized services, the push towards a multi-cloud approach has never been more compelling. But why is this trend accelerating?\u003C\u002Fp\u003E\n\u003Ch3 dir=\"ltr\"\u003E\u003Cstrong\u003E2. Why Multi-Cloud?\u003C\u002Fstrong\u003E\u003C\u002Fh3\u003E\n\u003Cp dir=\"ltr\"\u003Ea. Business Continuity\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli dir=\"ltr\"\u003EAvoiding Vendor Lock-in: Modern SaaS startups require agility in their operations. Single cloud dependency can prove detrimental, especially when contractual and service changes arise. By diversifying cloud providers, startups ensure they have the flexibility to adapt without major disruptions.\u003C\u002Fli\u003E\n\u003Cli dir=\"ltr\"\u003ERedundancy and Disaster Recovery: Enterprise operations are vast, and any downtime can translate into significant revenue loss. A multi-cloud strategy ensures there&rsquo;s always a backup. For example, If AWS faces an outage, perhaps your operations on Azure remain unaffected.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp dir=\"ltr\"\u003Eb. Best-of-Breed Solutions\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli dir=\"ltr\"\u003ELeveraging Unique Features: Each cloud provider has its flagship offerings. AWS might offer a robust computing infrastructure, while Google Cloud is renowned for machine learning capabilities. By not limiting themselves, businesses can tailor their tech stack, choosing the best from each provider.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp dir=\"ltr\"\u003Ec. Regulatory and Compliance Needs\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli dir=\"ltr\"\u003ERegional Data Storage: As businesses expand globally, they encounter varied data storage laws. For instance, GDPR in Europe mandates specific data storage and processing practices. Having a presence on a local cloud provider can simplify compliance.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp dir=\"ltr\"\u003Ed. Risk Mitigation\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli dir=\"ltr\"\u003ESpread of Assets: By distributing assets across multiple cloud providers, businesses effectively dilute the impact of any singular adverse event or decision made by one provider. This strategic dispersal mitigates potential risks, ensuring a safer and more stable operational environment.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch3 dir=\"ltr\"\u003E\u003Cstrong\u003E3. Challenges in Implementing Multi-Cloud Strategies\u003C\u002Fstrong\u003E\u003C\u002Fh3\u003E\n\u003Cp dir=\"ltr\"\u003Ea. Complexity in Management\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli dir=\"ltr\"\u003EUsing multiple providers means grappling with different dashboards, API configurations, and services. For startups, especially, this can prove overwhelming, slowing down deployments and increasing the learning curve.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp dir=\"ltr\"\u003Eb. Data Management and Transfer Costs\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli dir=\"ltr\"\u003ETransferring data, especially large datasets, between providers can be cost-intensive due to egress fees. Additionally, latency can become an issue if data needs to traverse between providers frequently.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp dir=\"ltr\"\u003Ec. Security and Compliance\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli dir=\"ltr\"\u003EWhile multi-cloud offers redundancy, it also introduces multiple potential points of vulnerability. A security breach in one cloud can have cascading effects, especially if there's data interdependency.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp dir=\"ltr\"\u003Ed. Skill Set and Training\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli dir=\"ltr\"\u003ECloud specialization means a team proficient in AWS might struggle with Azure nuances. Training becomes essential, but it&rsquo;s also time-consuming and expensive.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch3 dir=\"ltr\"\u003E\u003Cstrong\u003E4. Strategies for Seamless Multi-Cloud Platform Engineering\u003C\u002Fstrong\u003E\u003C\u002Fh3\u003E\n\u003Cp dir=\"ltr\"\u003Ea. Unified Management Tools\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli dir=\"ltr\"\u003ETerraform: An open-source tool that allows you to define and provision infrastructure across multiple providers using a simple declarative configuration language.\u003C\u002Fli\u003E\n\u003Cli dir=\"ltr\"\u003EAnsible: A powerful automation tool that can handle application deployment and configuration management across varied cloud infrastructures.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp dir=\"ltr\"\u003Eb. Containerization and Kubernetes\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli dir=\"ltr\"\u003EContainers, with tools like Docker, provide a consistent environment for applications, making them cloud-agnostic.\u003C\u002Fli\u003E\n\u003Cli dir=\"ltr\"\u003EKubernetes takes this a step further, offering orchestration and scaling of containerized applications, irrespective of the cloud provider.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp dir=\"ltr\"\u003Ec. Cloud Agnostic Architecture\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli dir=\"ltr\"\u003EDesigning applications to be cloud-neutral is paramount. Utilize open-source tools and ensure minimal dependency on services exclusive to a single provider.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp dir=\"ltr\"\u003Ed. Consistent Security and Compliance Frameworks\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli dir=\"ltr\"\u003EA unified security posture across platforms is crucial. Tools like Prisma Cloud can monitor and manage security consistently, sending alerts for any discrepancies.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp dir=\"ltr\"\u003Ee. Centralized Monitoring and Logging\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli dir=\"ltr\"\u003EGrafana: An open-source platform for monitoring and observability, it can seamlessly integrate with various data sources, giving a unified performance overview.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp dir=\"ltr\"\u003EFor SaaS startups and enterprises, the transition to a multi-cloud world might seem daunting. But, with a judicious mix of strategy, tools, and continuous learning, the rewards are significant. In this intricate dance across the cloud ecosystem, always keep your end-user experience as the focal point.\u003C\u002Fp\u003E\n\u003Cp dir=\"ltr\"\u003EYour journey through the multi-cloud expanse holds valuable insights. Share your experiences and challenges, and let&rsquo;s learn together. For those wanting to delve even deeper, visit us at PlatformEngineers.io\u003C\u002Fp\u003E",tags:[u,Q,"idp","multi-cloud","devops",N],time_to_read:"5 min",user_created:{id:b,first_name:j,last_name:k,email:l,password:c,location:a,title:a,description:a,tags:a,avatar:m,language:i,theme:d,tfa_secret:a,status:e,role:f,token:a,last_access:n,last_page:o,provider:g,external_identifier:a,auth_data:a,email_notifications:h},user_updated:{id:b,first_name:j,last_name:k,email:l,password:c,location:a,title:a,description:a,tags:a,avatar:m,language:i,theme:d,tfa_secret:a,status:e,role:f,token:a,last_access:n,last_page:o,provider:g,external_identifier:a,auth_data:a,email_notifications:h},image:{id:"0f5eb515-f6e2-40a5-95da-c2811530aad3",storage:q,filename_disk:"0f5eb515-f6e2-40a5-95da-c2811530aad3.png",filename_download:"blog 1.png",title:"Blog 1",type:s,folder:r,uploaded_by:b,uploaded_on:"2023-09-06T13:47:49.397Z",modified_by:a,modified_on:"2023-09-06T13:47:50.084Z",charset:a,filesize:"161575",width:w,height:w,duration:a,embed:a,description:a,location:a,tags:a,metadata:{}}},{id:3,status:p,sort:a,date_created:"2023-07-28T10:53:07.060Z",date_updated:"2023-11-09T08:24:03.558Z",slug:"internal-developer-platform",title:D,description:"\u003Cp\u003EDo you ever worry that your team is making mistakes because they're spending too much time wrestling with infrastructure and taking too much time building great applications?&nbsp;\u003Cbr \u002F\u003EHave you ever felt like you're constantly playing catch-up in the world of software development?\u003C\u002Fp\u003E\n\u003Cp\u003EIf you answered yes to either of these questions, then you're not alone. Many organizations are facing the same challenges.\u003C\u002Fp\u003E\n\u003Cp\u003E&nbsp;\u003C\u002Fp\u003E",seo_title:D,seo_description:D,content:"\u003Cp\u003E&nbsp;\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EThe Need for an Internal Developer Platform:\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EIn the world of software development, where the pace of change is ever-accelerating, organizations are under increasing pressure to deliver new applications faster and with fewer errors. This is especially true in industries where competition is fierce and customer expectations are high.\u003C\u002Fp\u003E\n\u003Cp\u003EAn Internal Developer Platform (IDP) can help organizations address these challenges by providing developers with the tools and infrastructure they need to be more productive. An IDP is a set of integrated tools, services, and processes that automate and streamline the development process. This can free up developers to focus on what they do best: building great applications.\u003C\u002Fp\u003E\n\u003Cp\u003E&nbsp;\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EBenefits of Using an IDP:\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EAn IDP offers numerous benefits, including:\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Cstrong\u003EIncreased productivity:\u003C\u002Fstrong\u003E Streamlining repetitive tasks and offering access to a centralized repository of tools and services can significantly boost developers' productivity.\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cstrong\u003EReduced errors:\u003C\u002Fstrong\u003E Ensuring a consistent development environment and enforcing coding standards can effectively minimize errors in the development process.\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cstrong\u003EImproved compliance\u003C\u002Fstrong\u003E: With a secure development environment and change tracking capabilities, organizations can better adhere to security and regulatory standards.\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cstrong\u003EIncreased agility:\u003C\u002Fstrong\u003E An IDP facilitates swift deployment of new applications and updates, enabling organizations to respond rapidly to changing market demands.\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cstrong\u003EReduced costs: \u003C\u002Fstrong\u003EThrough task automation and centralized resource management, IDPs contribute to cost savings in the development workflow.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E&nbsp;\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003ETechnical Details of an IDP:\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EAn IDP typically includes the following components:\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003ETooling:\u003C\u002Fstrong\u003E An IDP provides developers with access to a wide range of tools, including IDEs, build tools, testing tools, and deployment tools.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EInfrastructure: \u003C\u002Fstrong\u003EAn IDP provides developers with access to a variety of infrastructure resources, such as compute, storage, and networking.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EProcesses: \u003C\u002Fstrong\u003EAn IDP provides developers with a set of processes for managing the development lifecycle, such as requirements gathering, design, development, testing, and deployment.\u003C\u002Fp\u003E\n\u003Cp\u003EThe specific components of an IDP will vary depending on the organization's needs. However, all IDPs should provide developers with the tools and infrastructure they need to be productive.\u003C\u002Fp\u003E\n\u003Cp\u003E&nbsp;\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EHow to Build an IDP:\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EThere are two main ways to build an IDP:\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EBuild it yourself: \u003C\u002Fstrong\u003EThis option involves building the IDP from scratch using open-source tools and frameworks.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EUse a commercial IDP:\u003C\u002Fstrong\u003E This option involves purchasing a pre-built and ready-to-use commercial IDP.\u003C\u002Fp\u003E\n\u003Cp\u003EThe best option for you will depend on your organization's specific needs and budget. If you have the resources and expertise, building your own IDP can be a good option. However, if you are short on time or resources, using a commercial IDP may be a better choice.\u003C\u002Fp\u003E\n\u003Cp\u003E&nbsp;\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EConclusion:\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EAn IDP can be a valuable asset for any organization that wants to improve its development process. By providing developers with the tools and infrastructure they need, IDPs can help organizations improve productivity, reduce risk, and ensure compliance.\u003C\u002Fp\u003E\n\u003Cp\u003ERemember, embracing an Internal Developer Platform could be the game-changer your organization needs to thrive in the fast-paced world of software development.\u003C\u002Fp\u003E\n\u003Cp\u003E&nbsp;\u003C\u002Fp\u003E",tags:[Q,u,v,M,"infrastructure","cloud"],time_to_read:O,user_created:{id:b,first_name:j,last_name:k,email:l,password:c,location:a,title:a,description:a,tags:a,avatar:m,language:i,theme:d,tfa_secret:a,status:e,role:f,token:a,last_access:n,last_page:o,provider:g,external_identifier:a,auth_data:a,email_notifications:h},user_updated:{id:b,first_name:j,last_name:k,email:l,password:c,location:a,title:a,description:a,tags:a,avatar:m,language:i,theme:d,tfa_secret:a,status:e,role:f,token:a,last_access:n,last_page:o,provider:g,external_identifier:a,auth_data:a,email_notifications:h},image:{id:"fab40226-a93b-4fdd-a019-f38f7977676b",storage:q,filename_disk:"fab40226-a93b-4fdd-a019-f38f7977676b.png",filename_download:"2584948-ai-modified.png",title:"2584948 Ai Modified",type:s,folder:r,uploaded_by:b,uploaded_on:"2023-11-09T08:23:44.970Z",modified_by:a,modified_on:"2023-11-09T08:23:45.665Z",charset:a,filesize:"278587",width:w,height:w,duration:a,embed:a,description:a,location:a,tags:a,metadata:{}}},{id:2,status:p,sort:a,date_created:"2023-07-19T15:18:17.757Z",date_updated:"2023-11-09T08:20:47.964Z",slug:"platform-engineering-with-git-ops",title:E,description:"\u003Cp\u003E\u003Cspan style=\"font-weight: 400;\"\u003EPlatform engineering is the discipline of building and managing the infrastructure that developers use to build and deploy applications. It is a complex and challenging task, but GitOps can help to make it easier.\u003C\u002Fspan\u003E\u003C\u002Fp\u003E",seo_title:E,seo_description:E,content:"\u003Cp\u003E\u003Cspan style=\"font-weight: 400;\"\u003EPlatform engineering is the discipline of building and managing the infrastructure that developers use to build and deploy applications. It is a complex and challenging task, but GitOps can help to make it easier.\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan style=\"font-weight: 400;\"\u003EGitOps is a set of principles that use Git as the single source of truth for managing infrastructure. This means that all changes to infrastructure are made through Git, and the state of infrastructure is always represented by the latest commit in the Git repository.\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan style=\"font-weight: 400;\"\u003EThere are many benefits to using GitOps for platform engineering. Here are a few of the most important:\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan style=\"font-weight: 400;\"\u003E\u003Cstrong\u003EImproved collaboration: \u003C\u002Fstrong\u003EGitOps can help to improve collaboration between developers and operations teams. By using Git as the single source of truth, both teams can see the same information and work together to make changes to infrastructure. This can help to reduce the risk of errors and ensure that changes are made in a consistent and repeatable way.\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan style=\"font-weight: 400;\"\u003E\u003Cstrong\u003EAutomated infrastructure provisioning and deployment: \u003C\u002Fstrong\u003EGitOps can be used to automate the process of provisioning infrastructure, such as Kubernetes clusters, and deploying applications. This can help to reduce the amount of manual work required to manage infrastructure, and it can help to ensure that infrastructure is always up-to-date.\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan style=\"font-weight: 400;\"\u003E\u003Cstrong\u003EImproved visibility and auditing:\u003C\u002Fstrong\u003E By using Git as the single source of truth, it is easy to see who made changes to infrastructure and when those changes were made. This can help to improve visibility into infrastructure changes, and it can make it easier to troubleshoot problems.By incorporating Pull Request-based code reviews, treating infrastructure changes just like code, organizations can enhance visibility and auditing capabilities.&nbsp;\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan style=\"font-weight: 400;\"\u003E\u003Cstrong\u003EImproved security:\u003C\u002Fstrong\u003E GitOps can be used to enforce security policies by requiring that all changes to infrastructure be made through Git. This can help to ensure that only authorized users can make changes to infrastructure, and it can help to prevent unauthorized changes from being made.\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan style=\"font-weight: 400;\"\u003EOverall, GitOps can be a valuable tool for platform engineering teams. It can help to improve collaboration, automation, visibility, auditing, and security.\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan style=\"font-weight: 400;\"\u003EHere are some specific examples of how GitOps can be used in platform engineering:\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan style=\"font-weight: 400;\"\u003E\u003Cstrong\u003EProvisioning Kubernetes clusters: \u003C\u002Fstrong\u003EGitOps can be used to automate the process of provisioning Kubernetes clusters. This can be done by creating a Git repository that contains the configuration files for the Kubernetes clusters. When a new cluster is needed, the configuration files can be committed to the Git repository, and the cluster will be provisioned automatically.\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan style=\"font-weight: 400;\"\u003E\u003Cstrong\u003EDeploying applications: \u003C\u002Fstrong\u003EGitOps can also be used to automate the deployment of applications to Kubernetes clusters. This can be done by creating a Git repository that contains the deployment manifests for the applications. When a new application is deployed, the deployment manifests can be committed to the Git repository, and the application will be deployed automatically.\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan style=\"font-weight: 400;\"\u003E\u003Cstrong\u003EManaging infrastructure changes: \u003C\u002Fstrong\u003EGitOps can also be used to manage infrastructure changes. This can be done by creating a Git repository that contains the history of all infrastructure changes. This history can be used to track changes to infrastructure, and it can be used to roll back changes if necessary.\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EIn conclusion, GitOps is a valuable tool for platform engineering teams that can help to improve collaboration, automation, visibility, auditing, and security. By using Git as the single source of truth for managing infrastructure, GitOps can help to simplify the complex task of platform engineering.\u003C\u002Fp\u003E\n\u003Cp\u003E&nbsp;\u003C\u002Fp\u003E",tags:["GitOps","Platform Engineering",v,R,"Infrastructure Automation","CI\u002FCD"],time_to_read:"3 min ",user_created:{id:b,first_name:j,last_name:k,email:l,password:c,location:a,title:a,description:a,tags:a,avatar:m,language:i,theme:d,tfa_secret:a,status:e,role:f,token:a,last_access:n,last_page:o,provider:g,external_identifier:a,auth_data:a,email_notifications:h},user_updated:{id:b,first_name:j,last_name:k,email:l,password:c,location:a,title:a,description:a,tags:a,avatar:m,language:i,theme:d,tfa_secret:a,status:e,role:f,token:a,last_access:n,last_page:o,provider:g,external_identifier:a,auth_data:a,email_notifications:h},image:{id:"f1755c23-1608-4f38-a1d8-6068d2023ff4",storage:q,filename_disk:"f1755c23-1608-4f38-a1d8-6068d2023ff4.png",filename_download:"GitOps-modified.png",title:"Git Ops Modified",type:s,folder:r,uploaded_by:b,uploaded_on:"2023-11-09T08:20:39.398Z",modified_by:a,modified_on:"2023-11-09T08:20:40.323Z",charset:a,filesize:"271546",width:S,height:S,duration:a,embed:a,description:a,location:a,tags:a,metadata:{}}},{id:1,status:p,sort:a,date_created:"2023-04-20T04:38:48.000Z",date_updated:"2023-09-20T13:41:48.713Z",slug:"evolving-from-software-to-platform-engineering",title:x,description:"\u003Cp\u003E\u003Cspan style=\"font-weight: 400;\"\u003EIn today's fast-paced digital world, businesses rely on software applications that can handle millions of requests per second, provide real-time analytics, and seamlessly integrate with third-party systems. However, having a software application alone is not enough to cater to the constantly evolving needs of businesses and their customers. A robust and scalable platform is required to support the software application's development and deployment.\u003C\u002Fspan\u003E\u003C\u002Fp\u003E",seo_title:x,seo_description:x,content:"\u003Cp\u003E\u003Cspan style=\"font-weight: 400;\"\u003EIn today's fast-paced digital world, businesses rely on software applications that can handle millions of requests per second, provide real-time analytics, and seamlessly integrate with third-party systems. However, having a software application alone is not enough to cater to the constantly evolving needs of businesses and their customers. A robust and scalable platform is required to support the software application's development and deployment.\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan style=\"font-weight: 400;\"\u003EThis is where platform engineering comes into play. Platform engineering is the process of creating tools and workflows that allow software engineering teams to work more efficiently in the cloud-based environment. So a set of tools, workflows, and services that are integrated together to provide a unified platform referred as an \"Internal Developer Platform\" which helps developers with the entire lifecycle of an application.&nbsp;\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E\u003Cem\u003E\u003Cstrong\u003E&ldquo;Empowering developers to focus on innovation, not infrastructure, with an Internal Developer Platform&rdquo;\u003C\u002Fstrong\u003E\u003C\u002Fem\u003E\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003E\u003Cspan style=\"font-weight: 400;\"\u003EThe Internal Developer Platform is a layer on top of existing technology and tools that helps operations set up and allows developers to help themselves. The goal is to make the development process easier by providing clear instructions and easy-to-use tools that match the individual developer's preferred level of complexity.\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EWhy \u003Ca href=\"https:\u002F\u002Fimprowised.com\" target=\"_blank\" rel=\"noopener\"\u003EImprowised Technologies \u003C\u002Fa\u003E&nbsp;narrowed its focus to platform engineering\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan style=\"font-weight: 400;\"\u003EImprowised Technologies&nbsp;has been providing software engineering services from 2011, including cloud native web application development, technology consulting, product modernization and cloud infrastructure management services. Our software engineering services are still ongoing, and we have discovered a niche in infrastructure management services, which has led to the launch of PlatformEngineers.in. We have gained a deep understanding of the challenges that businesses face when building and deploying complex software applications. We also realized that many of these challenges could be addressed by focusing on platform engineering.\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E\u003Cstrong\u003E&ldquo;Unlock the full potential of your software applications with PlatformEngineers.in's expert platform engineering services&rdquo;&nbsp;\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003E\u003Cspan style=\"font-weight: 400;\"\u003EPlatform engineering involves designing, building, and managing the infrastructure and tools that support software applications. By narrowing our focus to platform engineering, we can help our clients build more reliable, scalable, and secure platforms that can support their business objectives.\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EThe importance of platform engineering in today's world\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan style=\"font-weight: 400;\"\u003EIn today's digital world, businesses are competing on a global scale, and the success of any business largely depends on its ability to provide reliable and scalable services to its customers. As a result, platform engineering has become a critical aspect of software development and deployment. Here are some reasons why platform engineering is essential in today's digital world:\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EScalability\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan style=\"font-weight: 400;\"\u003EScalability is crucial for businesses that want to grow and expand their operations. Platform engineering ensures that the platform can scale seamlessly and provide the necessary resources to support the application's growth. A platform that can scale horizontally or vertically can handle increased traffic, data, and users without any degradation in performance.&nbsp;\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EReliability\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan style=\"font-weight: 400;\"\u003EIn today's digital world, downtime is not an option. A reliable platform can guarantee high availability and ensure that the application is always up and running, and can handle any failures or outages without any impact on the application's availability.\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003ESecurity\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan style=\"font-weight: 400;\"\u003ESecurity is a top priority for businesses that want to protect their customers' data and intellectual property. A secure platform can prevent unauthorized access, data breaches, and cyber-attacks. Platform engineering ensures that the platform is designed with security in mind and can handle any security threats and vulnerabilities.\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EIntegration\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan style=\"font-weight: 400;\"\u003EIntegration is critical for businesses that want to leverage third-party services, APIs, and data sources. The use of Platform engineering ensures that the platform can integrate with other services and APIs and provide a seamless user experience.\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cbr \u002F\u003E\u003Cstrong\u003EPrevious Projects in Platform Engineering at Improwised Technologies\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cspan style=\"font-weight: 400;\"\u003EAt Improwised Technologies, we have extensive experience in platform engineering, having worked on numerous projects for clients across various industries. Here is an example of our past work in platform engineering:\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli style=\"font-weight: 400;\" aria-level=\"1\"\u003E\u003Cspan style=\"font-weight: 400;\"\u003EWe recently assisted a collaborative social media platform with a large user base, which was facing issues related to cost and performance due to its complex infrastructure. \u003C\u002Fspan\u003E\u003C\u002Fli\u003E\n\u003Cli style=\"font-weight: 400;\" aria-level=\"1\"\u003E\u003Cspan style=\"font-weight: 400;\"\u003EOur platform engineering team addressed this problem by simplifying its infrastructure and automating its deployment process. To achieve this, we migrated the application to a single self-managed Kubernetes cluster, consolidated the environments, and implemented (CI\u002FCD) processes. \u003C\u002Fspan\u003E\u003C\u002Fli\u003E\n\u003Cli style=\"font-weight: 400;\" aria-level=\"1\"\u003E\u003Cspan style=\"font-weight: 400;\"\u003EAs a result of these efforts, the platform's monthly recurring cost was reduced by 70%. We were also able to streamline the infrastructure through automation and ensure zero downtime during the migration process.&nbsp;\u003C\u002Fspan\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E\u003Cspan style=\"font-weight: 400;\"\u003EFor a more detailed case study on this project, please visit our case study - \u003Ca href=\"https:\u002F\u002Fplatformengineers.in\u002Fcase-studies\u002Ffrom-complexity-to-simplicity-case-study-of-infrastructure-consolidation\u002F\"\u003EFrom Complexity to Simplicity: A Cost Reduction Case Study through Infrastructure Consolidation and Automation for a Collaborative Social Media Platform\u003C\u002Fa\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cbr \u002F\u003E\u003Cbr \u002F\u003E\u003Cspan style=\"font-weight: 400;\"\u003EImprowised Technologies has a successful history of providing top-notch software engineering services to clients in different industries since 2011. Our software engineering services are still ongoing, and we have discovered a niche in infrastructure management services, which has led to the launch of PlatformEngineers.in. Our proficiency in infrastructure management services, coupled with our dedication to platform engineering, enables us to create tailored solutions that address the unique needs and goals of our clients. If you need an experienced team to assist you with your platform engineering requirements, you may want to consider collaborating with PlatformEngineers.in.\u003C\u002Fspan\u003E\u003C\u002Fp\u003E",tags:[u,v,R],time_to_read:"5 min ",user_created:{id:b,first_name:j,last_name:k,email:l,password:c,location:a,title:a,description:a,tags:a,avatar:m,language:i,theme:d,tfa_secret:a,status:e,role:f,token:a,last_access:n,last_page:o,provider:g,external_identifier:a,auth_data:a,email_notifications:h},user_updated:{id:b,first_name:j,last_name:k,email:l,password:c,location:a,title:a,description:a,tags:a,avatar:m,language:i,theme:d,tfa_secret:a,status:e,role:f,token:a,last_access:n,last_page:o,provider:g,external_identifier:a,auth_data:a,email_notifications:h},image:{id:"f80f4df4-4502-46b8-ab69-a2ef3597c9e4",storage:q,filename_disk:"f80f4df4-4502-46b8-ab69-a2ef3597c9e4.png",filename_download:"evolution.png",title:x,type:s,folder:r,uploaded_by:T,uploaded_on:"2023-04-19T15:17:40.836Z",modified_by:T,modified_on:"2023-04-19T15:18:05.770Z",charset:a,filesize:"72047",width:y,height:y,duration:a,embed:a,description:a,location:a,tags:a,metadata:{ihdr:{ImageWidth:y,ImageHeight:y,BitDepth:8,ColorType:"RGB with Alpha",Compression:"Deflate\u002FInflate",Filter:"Adaptive",Interlace:"Noninterlaced"}}}}],_img:{"/_ipx/f_png,s_68x55/img/plateform-engineers.png":"\u002F_nuxt\u002Fimage\u002F418082.png","/_ipx/w_540,f_png/img/blog.png":"\u002F_nuxt\u002Fimage\u002Fa6728e.png","/_ipx/h_300,f_png/https://data.improwised.com/assets/8fa40f59-46e5-4162-970e-6826a97664be":"\u002F_nuxt\u002Fimage\u002F82f5b3.png","/_ipx/f_png/https://data.improwised.com/assets/86701c80-2aba-48e2-90c1-d47cda4fdcd3":"\u002F_nuxt\u002Fimage\u002F2b9579.png","/_ipx/h_300,f_png/https://data.improwised.com/assets/8c141490-592d-44e9-af15-f62f90bf32d1":"\u002F_nuxt\u002Fimage\u002F734c0b.png","/_ipx/f_png/https://data.improwised.com/assets/9f47a2fb-c13e-4cf3-99fa-7117ef11e769":"\u002F_nuxt\u002Fimage\u002F69505e.png","/_ipx/h_300,f_png/https://data.improwised.com/assets/cc96e8f3-b848-4b92-a7e2-2739ce006789":"\u002F_nuxt\u002Fimage\u002F41559b.png","/_ipx/f_png/https://data.improwised.com/assets/d3f832d0-e7dc-42e5-8af7-7dd67d9ca481":"\u002F_nuxt\u002Fimage\u002F834650.png","/_ipx/h_300,f_png/https://data.improwised.com/assets/0f5eb515-f6e2-40a5-95da-c2811530aad3":"\u002F_nuxt\u002Fimage\u002F7d1926.png","/_ipx/h_300,f_png/https://data.improwised.com/assets/fab40226-a93b-4fdd-a019-f38f7977676b":"\u002F_nuxt\u002Fimage\u002F1cb3e3.png","/_ipx/h_300,f_png/https://data.improwised.com/assets/f1755c23-1608-4f38-a1d8-6068d2023ff4":"\u002F_nuxt\u002Fimage\u002F0a4c05.png","/_ipx/h_300,f_png/https://data.improwised.com/assets/f80f4df4-4502-46b8-ab69-a2ef3597c9e4":"\u002F_nuxt\u002Fimage\u002Fcd11ee.png","/_ipx/f_png,h_400/img/blog-bk-1.png":"\u002F_nuxt\u002Fimage\u002F9aec28.png"}}],fetch:{},mutations:[]}}(null,"37676ce8-2599-4132-9149-a05484760a76","**********","auto","active","5ef170ac-f2e9-4b93-a9ea-5c54fcf0fa40","default",true,"en-US","Priyank","Dhami","priyank@improwised.com","d3f832d0-e7dc-42e5-8af7-7dd67d9ca481","2023-12-27T13:54:28.002Z","\u002Fcontent\u002Fpe_industry","published","AMZ","33b4de25-d0f2-4999-ba32-6883f9932c34","image\u002Fpng",1500,"platform engineering","DevOps",1000,"Evolving from Software to Platform Engineering: Our Journey and Why It Matters",540,"a8418846-5723-4563-86df-99615438090f","S6-Overlay quickstart","Understanding the Role of Golden Path in Internal Developer Platforms","Platform Engineering in a Multi-Cloud World","Internal Developer Platform (IDP): The Key to Developer Productivity","Platform Engineering with GitOps: A Modern Approach to Infrastructure Management","Unlocking Success: The Power of Key Performance Indicators (KPIs) for Platform Engineering Teams","Mansi","Pancholi","mansi@improwised.com","86701c80-2aba-48e2-90c1-d47cda4fdcd3","2023-12-01T13:44:37.434Z","\u002Fcontent\u002Fpe_blog","IDP","cloud infrastructure","3 min",773,"internal developer platform","Kubernetes",1206,"8efd2782-260e-4047-a92d-b289479e1581")));